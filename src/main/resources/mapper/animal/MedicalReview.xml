<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

    <insert id="reviewScreen" parameterType="com.review.dto.animal.AnimalReviewDTO" useGeneratedKeys="true" keyProperty="reviewNum">
        INSERT INTO MEDICAL_REVIEW_BAORD
        (
            TITLE ,       -- 리뷰 제목 --
            CONTENT ,     -- 리뷰 내용 --
            <if test="writer != null and writer != '' ">
                WRITER        -- 리뷰 작성자 --
            </if>
        ) values
            (
             #{title},
             #{content},
            <if test="writer != null and writer != '' ">
                #{writer}
            </if>
            )
    </insert>

    <select id="findAll" resultType="com.review.dto.animal.AnimalReviewDTO">
        SELECT
            REVIEWNUM,                          /** 등록 번호 **/
            TITLE,                              /** 제목 **/
            CONTENT,                            /** 내용 **/
            WRITER,                             /** 작성자 **/
            REGDATE,                            /** 작성 시간 **/
            UPDATETDATE                         /** 수정 시간 **/
            FROM MEDICAL_REVIEW_BAORD
        ORDER BY REVIEWNUM DESC
    </select>

    <select id="read" parameterType="int" resultType="com.review.dto.animal.AnimalReviewDTO">
        SELECT
            REVIEWNUM,                          /** 등록 번호 **/
            TITLE,                              /** 제목 **/
            CONTENT,                            /** 내용 **/
            WRITER,                             /** 작성자 **/
            REGDATE                             /** 작성 시간 **/
        FROM MEDICAL_REVIEW_BAORD
        WHERE REVIEWNUM = #{reviewNum}
    </select>

    <update id="update" parameterType="com.review.dto.animal.AnimalReviewDTO">
        UPDATE MEDICAL_REVIEW_BAORD
        SET UPDATETDATE = CURRENT_TIMESTAMP
        <if test="title != null and title != '' ">
            , TITLE =  #{title}
        </if>
        <if test="content != null and content != '' ">
            , CONTENT =  #{content}
        </if>
        WHERE REVIEWNUM = #{reviewNum}
    </update>

    <delete id="delete" parameterType="int">
        DELETE FROM MEDICAL_REVIEW_BAORD
        where REVIEWNUM = #{reviewNum}
</delete>

    <select id="paging" resultType="com.review.dto.animal.AnimalReviewDTO">
        select * from (
            SELECT
            REVIEWNUM,                          /** 등록 번호 **/
            TITLE,                              /** 제목 **/
            CONTENT,                            /** 내용 **/
            WRITER,                             /** 작성자 **/
            REGDATE,                            /** 작성 시간 **/
            UPDATETDATE
            FROM MEDICAL_REVIEW_BAORD
            ORDER BY REVIEWNUM DESC
                          ) as T1
            LIMIT #{skip}, #{amount}
    </select>

    <select id="postTotal" resultType="int">
        SELECT COUNT(*) FROM MEDICAL_REVIEW_BAORD
    </select>


    <insert id="insertFile" parameterType="hashMap">
        /** BoardMapper - insertFile */
        insert into mp_file
        (
            file_no               /* 파일 번호*/
        , bno                   /* 보드 bno*/
        , org_file_name         /* 진짜 파일 이름*/
        , stored_file_name      /* 랜덤 파일 이름*/
        , file_size             /* 파일 사이즈*/
        , regdate               /* 파일 올린 시간*/
        , del_gb                /* 파일 삭제 시간*/
        )VALUES
            (
                #{FILE_NO}            /* 파일 번호*/
            , #{reviewNum}                /* 보드 BNO*/
            , #{ORG_FILE_NAME}      /* 진짜 파일 이름*/
            , #{STORED_FILE_NAME}   /* 랜덤 파일 이름*/
            , #{FILE_SIZE}          /* 파일 사이즈*/
            , SYSDATE()             /* 파일 올린 시간*/
            , 'N'                   /* 파일 삭제 시간*/
            )
    </insert>

    <select id="selectFileList" parameterType="int" resultType="hashMap">
        /** BoardMapper - selectFileList */
        SELECT
            FILE_NO                                /* 파일 번호*/
             , ORG_FILE_NAME                          /* 진짜 파일 이름*/
             , ROUND(FILE_SIZE/1024,1) AS FILE_SIZE   /* 파일 사이즈*/
             , STORED_FILE_NAME                       /* 랜덤 파일 이름*/
             , BNO                                    /* 보드 BNO*/
        FROM MP_FILE
        WHERE BNO = #{reviewNum}
          AND DEL_GB = 'N'
        ORDER BY FILE_NO ASC
    </select>

    <select id="selectFileInfo" parameterType="hashMap" resultType="hashMap">
        /** BoardMapper - selectFileInfo */
        SELECT
            STORED_FILE_NAME,
            ORG_FILE_NAME
        FROM MP_FILE
        WHERE FILE_NO = #{FILE_NO}
    </select>

    <delete id="fileRemove">
        /** BoardMapper - removeFile */

        DELETE FROM MP_FILE
        WHERE FILE_NO = #{FILE_NO}
    </delete>

    <update id="updateFile" parameterType="hashMap">
        UPDATE MP_FILE SET
            DEL_GB = 'Y'
        WHERE FILE_NO = #{FILE_NO}
    </update>
</mapper>