<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

    <insert id="reviewScreen" parameterType="com.review.dto.animal.AnimalReviewDTO" useGeneratedKeys="true" keyProperty="reviewNum">
/*********************** 리뷰 게시글 작성 MedicalReview.xml - review.reviewScreen *************************/

        INSERT INTO MEDICAL_REVIEW_BAORD
        (
        TITLE ,           /** 리뷰 제목 **/
        CONTENT ,         /** 리뷰 내용 **/
        WRITER        /** 리뷰 작성자 **/

        )
        VALUES
        (
        #{title},
        #{content},
        #{writer}

        )

    </insert>

    <select id="findAll" resultType="com.review.dto.animal.AnimalReviewDTO">
/**************************** 리뷰 전체 게시글 보기 MedicalReview.xml - review.findAll *********************************/

        SELECT
            REVIEWNUM,                          /** 등록 번호 **/
            TITLE,                              /** 제목 **/
            CONTENT,                            /** 내용 **/
            WRITER,                             /** 작성자 **/
            REGDATE,                            /** 작성 시간 **/
            UPDATETDATE                         /** 수정 시간 **/
        FROM
                MEDICAL_REVIEW_BAORD
        ORDER BY
            REVIEWNUM DESC

    </select>

    <select id="read" parameterType="int" resultType="com.review.dto.animal.AnimalReviewDTO">
/**************************** 리뷰 게시글 상세보기 MedicalReview.xml - review.read *********************************/

        SELECT
            REVIEWNUM,                          /** 등록 번호 **/
            TITLE,                              /** 제목 **/
            CONTENT,                            /** 내용 **/
            WRITER,                             /** 작성자 **/
            REGDATE                             /** 작성 시간 **/
        FROM
            MEDICAL_REVIEW_BAORD
        WHERE
            REVIEWNUM = #{reviewNum}            /** 등록 번호 **/

    </select>

    <update id="update" parameterType="com.review.dto.animal.AnimalReviewDTO">
/**************************** 리뷰 게시글 수정 MedicalReview.xml - review.update *********************************/

        UPDATE
            MEDICAL_REVIEW_BAORD
        SET
            UPDATETDATE = CURRENT_TIMESTAMP                 /** 수정된 날짜 **/
        <if test="title != null and title != '' ">
            , TITLE =  #{title}                             /** 수정된 제목  **/
        </if>
        <if test="content != null and content != '' ">
            , CONTENT =  #{content}                         /** 수정된 내용 **/
        </if>
        WHERE
            REVIEWNUM = #{reviewNum}                        /** 수정된 게시글 번호 **/


    </update>

    <delete id="delete" parameterType="int">
/**************************** 리뷰 게시글 삭제 MedicalReview.xml - review.delete  *********************************/

        DELETE
        FROM
            MEDICAL_REVIEW_BAORD
        where
            REVIEWNUM = #{reviewNum}    /** 등록 번호 **/

</delete>

    <select id="paging" resultType="com.review.dto.animal.AnimalReviewDTO">
/**************************** 리뷰 게시글 페이징 MedicalReview.xml - review.paging *********************************/

        select * from (
            SELECT
            REVIEWNUM,                          /** 등록 번호 **/
            TITLE,                              /** 제목 **/
            CONTENT,                            /** 내용 **/
            WRITER,                             /** 작성자 **/
            REGDATE,                            /** 작성 시간 **/
            UPDATETDATE
            FROM
                MEDICAL_REVIEW_BAORD
            ORDER BY
                REVIEWNUM DESC
                          ) as T1
            LIMIT #{skip}, #{amount}            /** 생략 된 게시물 값 과 보여줄 게시물 값 **/

    </select>

    <select id="postTotal" resultType="int">
/**************************** 리뷰 총 게시물 수 MedicalReview.xml - review.postTotal *********************************/

        SELECT
            COUNT(*)
        FROM
            MEDICAL_REVIEW_BAORD

    </select>

    <select id="myWriting" resultType="com.review.dto.animal.AnimalReviewDTO">
/**************************** 내가 쓴 리뷰 게시물 MedicalReview.xml - review.myWriting *********************************/

        SELECT
            REVIEWNUM,                          /** 등록 번호 **/
            TITLE,                              /** 제목 **/
            CONTENT,                            /** 내용 **/
            REGDATE                             /** 작성 시간 **/
        FROM
            MEDICAL_REVIEW_BAORD
        WHERE
            WRITER = #{ownerId}                 /** 작성자 **/
        ORDER BY
            REVIEWNUM DESC

    </select>


<!--    <insert id="insertFile" parameterType="hashMap">-->
<!--/**************************** 리뷰 게시물 파일 추가 MedicalReview.xml - review.insertFile *********************************/-->
<!--        insert into mp_file-->
<!--        (-->
<!--            FILE_NO,               /* 파일 번호*/-->
<!--            BNO,                   /* 게시물 번호*/-->
<!--            ORG_FILE_NAME,         /* 진짜 파일 이름*/-->
<!--            STORED_FILE_NAME,      /* 랜덤 파일 이름*/-->
<!--            FILE_SIZE,             /* 파일 사이즈*/-->
<!--            REGDATE,               /* 파일 올린 시간*/-->
<!--            DEL_GB,                /* 파일 삭제 시간*/-->
<!--            FOLDER_NM              /* 폴더 이름 */-->
<!--        )VALUES-->
<!--        (-->
<!--            #{FILE_NO},            /* 파일 번호 */-->
<!--            #{reviewNum},          /* 보드 BNO */-->
<!--            #{ORG_FILE_NAME},      /* 진짜 파일 이름 */-->
<!--            #{STORED_FILE_NAME},   /* 랜덤 파일 이름 */-->
<!--            #{FILE_SIZE},          /* 파일 사이즈 */-->
<!--            SYSDATE(),             /* 파일 올린 시간 */-->
<!--            'N',                   /* 파일 삭제 시간 */-->
<!--            #{FOLDER_NM}           /* 폴더 이름 */-->
<!--        )-->
<!--    </insert>-->

<!--    <select id="selectFileList" parameterType="int" resultType="hashMap">-->
<!--/**************************** 리뷰 게시물 파일 목록  MedicalReview.xml - review.selectFileList *********************************/-->

<!--        SELECT-->
<!--            FILE_NO,                                /* 파일 번호 */-->
<!--            ORG_FILE_NAME,                          /* 진짜 파일 이름 */-->
<!--            ROUND(FILE_SIZE/1024,1) AS FILE_SIZE,   /* 파일 사이즈 */-->
<!--            STORED_FILE_NAME,                       /* 랜덤 파일 이름 */-->
<!--            BNO                                     /* 게시물 번호 */-->
<!--        FROM-->
<!--            MP_FILE-->
<!--        WHERE-->
<!--            BNO = #{reviewNum}-->
<!--          AND-->
<!--            DEL_GB = 'N'-->
<!--        ORDER BY-->
<!--            FILE_NO ASC-->

<!--    </select>-->

<!--    <select id="selectFileInfo" parameterType="hashMap" resultType="hashMap">-->
<!--/**************************** 리뷰 게시물 파일 정보 MedicalReview.xml - review.selectFileInfo *********************************/-->

<!--        SELECT-->
<!--            STORED_FILE_NAME,-->
<!--            ORG_FILE_NAME-->
<!--        FROM-->
<!--            MP_FILE-->
<!--        WHERE-->
<!--            FILE_NO = #{FILE_NO}-->

<!--    </select>-->

<!--    <delete id="fileRemove">-->
<!--/**************************** 리뷰 게시물 파일 삭제 - review.fileRemove *********************************/-->

<!--        DELETE-->
<!--        FROM-->
<!--            MP_FILE-->
<!--        WHERE-->
<!--            FILE_NO = #{FILE_NO}        /** 파일 번호 **/-->

<!--    </delete>-->

<!--    <update id="updateFile" parameterType="hashMap">-->
<!--/**************************** 리뷰 게시물 파일 수정 - review.updateFile *********************************/-->

<!--        UPDATE-->
<!--            MP_FILE-->
<!--        SET-->
<!--            DEL_GB = 'Y'-->
<!--        WHERE-->
<!--            FILE_NO = #{FILE_NO}        /** 파일 번호 **/-->

<!--    </update>-->
</mapper>