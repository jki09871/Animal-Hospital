<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="record">
    <insert id="write" parameterType="com.review.dto.animal.PetMedicalRecordDTO">
        /** 처방전 작성 **/
        INSERT INTO PET_MEDICAL_RECORD
        (
            PET_ID ,           /** 동물 칩 정보 **/
            PET_NAME ,         /** 동물 이름 **/
            PET_AGE ,          /** 동물 나이 **/
            SYMPTOMS ,         /** 증상 **/
            DIAGNOSIS ,        /** 진단 **/
            TREATMENT ,        /** 치료 **/
            PRESCRIPTION,      /** 처방전 **/
            DOCTOR,
            DATE_OF_VISIT
         )
         VALUES
        (
            #{pet_Id},
            #{pet_Name},
            #{pet_Age},
            #{symptoms},
            #{diagnosis},
            #{treatment},
            #{prescription},
            #{doctor},
            #{date_Of_Visit}
         );
    </insert>

    <select id="recordList" resultType="com.review.dto.animal.PetDTO">
        /** 처방전 등록된 동물 보기 **/
        SELECT * FROM (
            SELECT
                PET_ID ,           /** 동물 칩 정보 **/
                PET_NAME ,         /** 동물 이름 **/
                TIMESTAMPDIFF(YEAR, AGE, CURDATE()) + 1 AS AGE , /** 동물 나이 계산값 **/
                SPECIES,           /** 종 **/
                SIGNIFICANT        /**  특이사항 **/
            FROM
                PET_TBL
                    <if test="keyword != null">
                        <include refid="PagingCriteria"></include>
                    </if>
                ) AS T1
            LIMIT #{skip}, #{amount}

    </select>

    <select id="read" resultType="java.util.HashMap" >
        /** 해당동물의 처방전 리스트 **/

        SELECT
            RECORD_ID,         /** 번호 **/
            PET_ID ,           /** 동물 칩 정보 **/
            PET_NAME ,         /** 동물 이름 **/
            TIMESTAMPDIFF(YEAR, PET_AGE, CURDATE()) + 1 AS CALCULATED_AGE , /** 동물 나이 계산값 **/
            DATE_OF_VISIT,     /** 방문날짜 **/
            SYMPTOMS,          /** 증상 **/
            DOCTOR             /** 수의사 **/
        FROM
            PET_MEDICAL_RECORD
        WHERE
            PET_ID = #{pet_Id}
            <if test="startTime != null and startTime != ''">
                AND DATE_OF_VISIT BETWEEN #{startTime} AND #{endTime}
            </if>
        ORDER BY
            RECORD_ID DESC
    </select>

    <select id="edit" resultType="com.review.dto.animal.PetMedicalRecordDTO">
        SELECT
            RECORD_ID,
            PET_ID ,           /** 동물 칩 정보 **/
            PET_NAME ,         /** 동물 이름 **/
            PET_AGE ,          /** 동물 나이 **/
            TIMESTAMPDIFF(YEAR, PET_AGE, CURDATE()) + 1 AS CALCULATED_AGE,
            SYMPTOMS ,         /** 증상 **/
            DIAGNOSIS ,        /** 진단 **/
            TREATMENT ,        /** 치료 **/
            PRESCRIPTION,      /** 처방전 **/
            DATE_OF_VISIT      /** 방문날짜 **/
        FROM
            PET_MEDICAL_RECORD
        WHERE
            RECORD_ID = #{record_Id}
    </select>

    <update id="editSend" parameterType="java.util.HashMap">
        UPDATE PET_MEDICAL_RECORD
        SET
            PET_NAME = #{pet_Name},             /** 동물 이름 **/
            PET_AGE = #{pet_Age},               /** 동물 나이 **/
            SYMPTOMS = #{symptoms},             /** 증상 **/
            DIAGNOSIS = #{diagnosis},           /** 진단 **/
            TREATMENT = #{treatment},           /** 치료 **/
            PRESCRIPTION = #{prescription}      /** 처방전 **/
        WHERE
            RECORD_ID = #{record_Id}
    </update>

    <select id="postTotal" resultType="int">
        SELECT COUNT(*) FROM PET_TBL
        <if test="keyword != null">
            <include refid="PagingCriteria"></include>
        </if>
    </select>

    <!-- 검색 조건문 -->
    <sql id="PagingCriteria">
        <trim prefix="where (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'N'.toString()">
                            PET_NAME LIKE CONCAT('%',#{keyword},'%')
                        </when>
                        <when test="type == 'I'.toString()">
                            PET_ID LIKE CONCAT('%',#{keyword},'%')
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>

    </sql>


</mapper>